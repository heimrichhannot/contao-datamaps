	(function($){

	var map;

	$(document).ready(function(){

		map = $('#<?php echo $this->cssID; ?>').datamaps({
			<?php echo $this->config; ?>,
			<?php if($this->states): ?>
				data : <?php echo $this->states; ?>,
			<?php endif; ?>
			done: function( datamap ) {
				<?php if($this->bubbles) : ?>
					datamap.bubbles(<?php echo $this->bubbles; ?>);

					//standard plugin interface. Function takes 3 params - a layer ('<g>', data, and the options object)
					function handleBombLabels ( layer, data, options ) {
						var self = this;
						options = options || {};

						d3.selectAll(".datamaps-bubble")
						.attr("data-foo", function(info) {

						if(info === undefined) return false;
						if(info.addLabel != true) return false;

						//convert lat/lng into x/y
						var center = self.latLngToXY(info.latitude, info.longitude);

						var xOffset = info.labelOffsetX ? parseFloat(info.labelOffsetX) : 0,
						yOffset = info.labelOffsetY ? parseFloat(info.labelOffsetY) : -5;

						var x,y;

						x = center[0] + xOffset;
						y = center[1] + yOffset;


						layer.append("text")
						.attr("x", x) //this could use a little massaging
						.attr("y", y)
						.style("font-size", (options.fontSize || 10) + 'px')
						.style("text-shadow", "0px 0px 2px rgba(255,255,255,0.7)")
						.style("fill", options.labelColor || "#000")
						.attr('class', 'datamaps-bubble-label datamap-label')
						.attr('data-info', JSON.stringify(info))
						.text(info.title);
						});
					}

					//register the plugin to datamaps
					datamap.addPlugin('bombLabels', handleBombLabels);

					//call the plugin. The 2nd param is options and it will be sent as `options` to the plugin function.
					//Feel free to add to these options, change them, etc
					datamap.bombLabels(<?php echo $this->bubbles; ?>, {labelColor: '#000', labelKey: 'fillKey'});

					// go to url on click
					$('.datamaps-bubble, .datamaps-bubble-label').click(function(e) {
						if($(e.target).data('info').link == null) return false;
						window.location.href = $(e.target).data('info').link;
					});
				<?php endif; ?>


				<?php if($this->states): ?>

					//standard plugin interface. Function takes 3 params - a layer ('<g>', data, and the options object)
					function handleStateLabels ( layer, data, options ) {
						var self = this;
						options = options || {};
						d3.selectAll(".datamaps-subunit")
						.attr("data-foo", function(d) {
							var center = self.path.centroid(d);
							var info = data[d.id];

							if(info === undefined) return false;
							if(info.addLabel != true) return false;

							var xOffset = info.labelOffsetX ? parseFloat(info.labelOffsetX) : -7.5,
								yOffset = info.labelOffsetY ? parseFloat(info.labelOffsetY) : 5;

							var x,y;

							x = center[0] + xOffset;
							y = center[1] + yOffset;

							if (info.smallState){
							layer.append("line")
							.attr("x1", x - 3)
							.attr("y1", y - 5)
							.attr("x2", center[0])
							.attr("y2", center[1])
							.style("stroke", options.labelColor || "#000")
							.style("stroke-width", options.lineWidth || 1)
							}

							layer.append("text")
							.attr("x", x)
							.attr("y", y)
							.style("font-size", (options.fontSize || 10) + 'px')
							.style("fill", options.labelColor || "#000")
							.attr('class', 'datamaps-subunit-label datamap-label')
							.attr('data-info', JSON.stringify(info))
							.text( info ? info.title : d.id );
							return "bar";
						});
					}

					//register the plugin to datamaps
					datamap.addPlugin('stateLabels', handleStateLabels);

					datamap.stateLabels(<?php echo $this->states; ?>);

					// go to url on click
					$('.datamaps-subunit, .datamaps-subunit-label').click(function(e) {
						if($(e.target).data('info').link == null) return false;
						window.location.href = $(e.target).data('info').link;
					});
				<?php endif; ?>
			}
		});
});


	window.addEventListener('resize', function() {
		map.resize();
	});

})(jQuery);
